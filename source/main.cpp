/*******************************************************************************


---------------------------- 基本的なmodeごとの動作 ----------------------------
 mode0 : 探索の設定ファイルなしで実行 (主にデバッグ用)
 mode1 : 探索の設定ファイルを読み込んで, 複数の実験を連続して実行
 mode2 : 差分リストを強制的に作成した後に, 探索を実行 (アルゴリズム検証用に作成)

-------------------------- アルゴリズムを追加するとき --------------------------
 1. ExplorationBaseのサブクラスとして新しいアルゴリズムのファイルを作成
 2. struct.hに新しいアルゴリズム名を追加
 3. Examination.cppに新しいアルゴリズムのファイル(.h)をinclude
 4. Examination::Examine()のswitch文にアルゴリズムごとの分岐処理を追加
 5. Examination::GetCondition()のargV[2]の処理にアルゴリズム名の処理を追加
 6. Recorder::RecExamInfo()のアルゴリズム名書き込み処理に名前を追加

--------------------------------------------------------------------------------

*******************************************************************************/

#include "Examination.h"

int main(int argc, char *argv[]) {
    // _CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);

    Examination exam(argc, argv);

    exam.Run();

    return 0;
}
